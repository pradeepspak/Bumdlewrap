metadata:
  labels:
    app: redis
    env: {{env}}
spec:
  replicas: {{replicas}}
  selector:
    matchLabels:
      app: redis
      env: {{env}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
        env: {{env}}
      name: redis
    spec:
      containers:
      - image: redis:3.2-alpine
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "512m"
            memory: "128Mi"
          requests:
            cpu: "128m"
            memory: "64Mi"
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/redis
          name: redisdata
      terminationGracePeriodSeconds: 30
      volumes:
      - name: redisdata
        persistentVolumeClaim:
          claimName: redis
